var E=Object.create;var d=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var $=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var J=(t,o,r,s)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of D(o))!A.call(t,n)&&n!==r&&d(t,n,{get:()=>o[n],enumerable:!(s=S(o,n))||s.enumerable});return t};var u=(t,o,r)=>(r=t!=null?E($(t)):{},J(o||!t||!t.__esModule?d(r,"default",{value:t,enumerable:!0}):r,t));var e=u(require("@actions/core")),m=u(require("@actions/github")),h=require("@based/client"),i=require("fs"),l=require("path"),y=require("child_process"),g=require("util"),b=require("@saulx/utils"),K=(0,g.promisify)(y.exec);async function W(){try{let t=e.getInput("userID"),o=e.getInput("apiKey"),r=e.getInput("size")??"small",s=e.getInput("region")??"eu-central-1",n=m.context.ref.replace("refs/heads/","");if(!t||!o)throw new Error("You need to pass the userID and the apiKey as input to the function to deploy your files.");let a=(0,l.join)(process.cwd(),"based.json");if(!(0,i.existsSync)(a))throw new Error('Was not possible to find the "based.json" file in the branch. Add the file and try again.');let w=JSON.parse((0,i.readFileSync)(a,"utf-8")),{org:c,project:p,env:v}=w;if(!c||!p||!v)throw new Error('Was not possible to read the "based.json" file in the branch.');let f=new h.BasedClient({org:"saulx",project:"based-cloud",env:"platform",name:"@based/admin-hub"});await f.setAuthState({token:o,type:"serviceAccount",userId:t});try{await f.call("create-env",{org:c,project:p,env:n,config:r,region:s}),e.info("Waiting for the creation of the environment..."),await(0,b.wait)(3e4),e.info("Environment created successfully.")}catch(x){e.info(`Error creating the environment: ${x.message}`)}e.info("Starting the Deploy using the Based CLI...");let{stdout:I,stderr:j}=await K(`npx @based/cli deploy --api-key "${o}"`);e.info(`stdout: ${I}`),e.error(`stderr: ${j}`),e.setOutput("response","Success! Enjoy your fastest deploy ever!")}catch(t){e.setFailed(t.message)}}W();
